package com.midea.fridgesettings.model

import com.midea.fridgesettings.*
import com.midea.fridgesettings.BaseFragment.FragmentTag

/**
 * Created by chenjian on 6/3/17.
 */
fun getTabItemInfo() = arrayListOf(FragmentTabInfo(0, "网络", FragmentTag.FRAGMENT_TAB_HEAD),
        FragmentTabInfo(R.mipmap.ic_wifi, "WI-FI", FragmentTag.FRAGMENT_TAB_WIFI, true),
        FragmentTabInfo(R.mipmap.ic_bluetooth, "蓝牙", FragmentTag.FRAGMENT_TAB_BLUETOOTH),

        FragmentTabInfo(0, "账号", FragmentTag.FRAGMENT_TAB_HEAD),
        FragmentTabInfo(R.mipmap.ic_user, "我的", FragmentTag.FRAGMENT_TAB_USER),
        //FragmentTabInfo(R.mipmap.ic_address, "收货地址管理", FragmentTag.FRAGMENT_TAB_ADDRESS),
        FragmentTabInfo(R.mipmap.ic_phone, "绑定手机", FragmentTag.FRAGMENT_TAB_PHONE),

        FragmentTabInfo(0, "设备", FragmentTag.FRAGMENT_TAB_HEAD),
        FragmentTabInfo(R.mipmap.ic_display, "显示和亮度", FragmentTag.FRAGMENT_TAB_DISPLAY),
        FragmentTabInfo(R.mipmap.ic_sound, "音量", FragmentTag.FRAGMENT_TAB_SOUND),

        FragmentTabInfo(0, "系统", FragmentTag.FRAGMENT_TAB_HEAD),
        FragmentTabInfo(R.mipmap.ic_date, "时间和日期", FragmentTag.FRAGMENT_TAB_DATE),
        FragmentTabInfo(R.mipmap.ic_about, "关于冰箱", FragmentTag.FRAGMENT_TAB_ABOUT),
        FragmentTabInfo(R.mipmap.ic_agreement, "用户协议", FragmentTag.FRAGMENT_TAB_AGREEMENT),
        FragmentTabInfo(R.mipmap.ic_update, "在线升级", FragmentTag.FRAGMENT_TAB_UPDATE))

fun getFragment(tag: FragmentTag): BaseFragment {
    when (tag) {
        FragmentTag.FRAGMENT_TAB_WIFI -> {
            return WifiFragment(tag)
        }
        FragmentTag.FRAGMENT_TAB_BLUETOOTH -> {
            return BluetoothFragment(tag)
        }
        FragmentTag.FRAGMENT_TAB_USER -> {
            return UserFragment(tag)
        }
        FragmentTag.FRAGMENT_TAB_ADDRESS -> {
            return AddressFragment(tag)
        }
        FragmentTag.FRAGMENT_TAB_PHONE -> {
            return PhoneFragment(tag)
        }
        FragmentTag.FRAGMENT_TAB_DISPLAY -> {
            return DisplayFragment(tag)
        }
        FragmentTag.FRAGMENT_TAB_SOUND -> {
            return SoundFragment(tag)
        }
        FragmentTag.FRAGMENT_TAB_DATE -> {
            return DateFragment(tag)
        }
        FragmentTag.FRAGMENT_TAB_ABOUT -> {
            return AboutFragment(tag)
        }
        FragmentTag.FRAGMENT_TAB_AGREEMENT -> {
            return AgreementFragment(tag)
        }
        FragmentTag.FRAGMENT_TAB_UPDATE -> {
            return UpdateFragment(tag)
        }
    }
    throw Exception("Unknow Type")
}
